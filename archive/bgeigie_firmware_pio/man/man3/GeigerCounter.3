.TH "GeigerCounter" 3 "Thu Mar 10 2022" "BGeigieZen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
GeigerCounter
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <geiger_counter\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBGeigerCounter\fP (uint32_t time_interval, int gpio, float cpm2ush_divider, float bqm2_factor, uint32_t cpm_alarm_level)"
.br
.ti -1c
.RI "\fBGeigerCounter\fP (uint32_t time_interval, int gpio)"
.br
.ti -1c
.RI "void \fBconfigure\fP (float cpm2ush_divider, float bqm2_factor, uint32_t cpm_alarm_level)"
.br
.ti -1c
.RI "void \fBbegin\fP ()"
.br
.ti -1c
.RI "uint32_t \fBper_bin\fP () const"
.br
.ti -1c
.RI "uint32_t \fBtotal\fP () const"
.br
.ti -1c
.RI "uint32_t \fBpeak_per_minute\fP () const"
.br
.ti -1c
.RI "uint32_t \fBper_minute_raw\fP () const"
.br
.ti -1c
.RI "uint32_t \fBper_minute\fP () const"
.br
.ti -1c
.RI "float \fBuSv\fP () const"
.br
.ti -1c
.RI "float \fBuSv_single_bin\fP () const"
.br
.ti -1c
.RI "float \fBBqm2\fP () const"
.br
.ti -1c
.RI "float \fBBqm2_single_bin\fP () const"
.br
.ti -1c
.RI "bool \fBalarm\fP () const"
.br
.ti -1c
.RI "size_t \fBn_bins\fP () const"
.br
.ti -1c
.RI "bool \fBvalid\fP () const"
.br
.ti -1c
.RI "bool \fBavailable\fP () const"
.br
.ti -1c
.RI "void \fBconsume\fP ()"
.br
.ti -1c
.RI "void \fBupdate\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 11 of file geiger_counter\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "GeigerCounter::GeigerCounter (uint32_t time_interval, int gpio, float cpm2ush_divider, float bqm2_factor, uint32_t cpm_alarm_level)\fC [inline]\fP"

.PP
Definition at line 34 of file geiger_counter\&.hpp\&.
.SS "GeigerCounter::GeigerCounter (uint32_t time_interval, int gpio)\fC [inline]\fP"

.PP
Definition at line 41 of file geiger_counter\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "bool GeigerCounter::alarm () const\fC [inline]\fP"

.PP
Definition at line 65 of file geiger_counter\&.hpp\&.
.SS "bool GeigerCounter::available () const\fC [inline]\fP"

.PP
Definition at line 70 of file geiger_counter\&.hpp\&.
.SS "void GeigerCounter::begin ()\fC [inline]\fP"

.PP
Definition at line 53 of file geiger_counter\&.hpp\&.
.SS "float GeigerCounter::Bqm2 () const\fC [inline]\fP"

.PP
Definition at line 62 of file geiger_counter\&.hpp\&.
.SS "float GeigerCounter::Bqm2_single_bin () const\fC [inline]\fP"

.PP
Definition at line 63 of file geiger_counter\&.hpp\&.
.SS "void GeigerCounter::configure (float cpm2ush_divider, float bqm2_factor, uint32_t cpm_alarm_level)\fC [inline]\fP"

.PP
Definition at line 45 of file geiger_counter\&.hpp\&.
.SS "void GeigerCounter::consume ()\fC [inline]\fP"

.PP
Definition at line 71 of file geiger_counter\&.hpp\&.
.SS "size_t GeigerCounter::n_bins () const\fC [inline]\fP"

.PP
Definition at line 67 of file geiger_counter\&.hpp\&.
.SS "uint32_t GeigerCounter::peak_per_minute () const\fC [inline]\fP"

.PP
Definition at line 57 of file geiger_counter\&.hpp\&.
.SS "uint32_t GeigerCounter::per_bin () const\fC [inline]\fP"

.PP
Definition at line 55 of file geiger_counter\&.hpp\&.
.SS "uint32_t GeigerCounter::per_minute () const\fC [inline]\fP"

.PP
Definition at line 59 of file geiger_counter\&.hpp\&.
.SS "uint32_t GeigerCounter::per_minute_raw () const\fC [inline]\fP"

.PP
Definition at line 58 of file geiger_counter\&.hpp\&.
.SS "uint32_t GeigerCounter::total () const\fC [inline]\fP"

.PP
Definition at line 56 of file geiger_counter\&.hpp\&.
.SS "void GeigerCounter::update ()"

.PP
Definition at line 5 of file geiger_counter\&.cpp\&.
.SS "float GeigerCounter::uSv () const\fC [inline]\fP"

.PP
Definition at line 60 of file geiger_counter\&.hpp\&.
.SS "float GeigerCounter::uSv_single_bin () const\fC [inline]\fP"

.PP
Definition at line 61 of file geiger_counter\&.hpp\&.
.SS "bool GeigerCounter::valid () const\fC [inline]\fP"

.PP
Definition at line 69 of file geiger_counter\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for BGeigieZen from the source code\&.
