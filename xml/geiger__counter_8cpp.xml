<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="geiger__counter_8cpp" kind="file" language="C++">
    <compoundname>geiger_counter.cpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">numeric</includes>
    <includes refid="src_2geiger__counter_8hpp" local="no">geiger_counter.hpp</includes>
    <incdepgraph>
      <node id="7">
        <label>config.hpp</label>
        <link refid="src_2config_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>archive/bgeigie_firmware_pio/src/geiger_counter.cpp</label>
        <link refid="geiger__counter_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>geiger_counter.hpp</label>
        <link refid="src_2geiger__counter_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>hardwarecounter.hpp</label>
        <link refid="src_2hardwarecounter_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>M5Stack.h</label>
      </node>
      <node id="12">
        <label>Ticker.h</label>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
      <node id="5">
        <label>array</label>
      </node>
      <node id="8">
        <label>cstdint</label>
      </node>
      <node id="9">
        <label>cstdlib</label>
      </node>
      <node id="13">
        <label>driver/pcnt.h</label>
      </node>
      <node id="11">
        <label>limits</label>
      </node>
      <node id="3">
        <label>numeric</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="src_2geiger__counter_8hpp" kindref="compound">geiger_counter.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="class_geiger_counter_1af47906652803b0a81b3485ee19d1f7e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_geiger_counter_1af47906652803b0a81b3485ee19d1f7e6" kindref="member">GeigerCounter::update</ref>()<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pulse_counter.<ref refid="class_hardware_counter_1a8b1831862879280db14b8a7406169e7c" kindref="member">available</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>_cpb<sp/>=<sp/>pulse_counter.<ref refid="class_hardware_counter_1ad8529a6e8473d44f214dd1649fed8c38" kindref="member">get_last_count</ref>();</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>increase<sp/>total<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>_total<sp/>+=<sp/>_cpb;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>shift<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>_pos++;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_pos<sp/>==<sp/>_shift_reg.size())<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>_pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_valid)<sp/>_valid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>_shift_reg[_pos]<sp/>=<sp/>_cpb;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sum<sp/>up<sp/>the<sp/>shift<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>_cpm_raw<sp/>=<sp/>std::accumulate(_shift_reg.begin(),<sp/>_shift_reg.end(),<sp/>0);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CPM<sp/>compensated<sp/>for<sp/>deadtime<sp/>(medcom<sp/>international)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>_cpm_comp<sp/>=</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)_cpm_raw<sp/>/<sp/>(1<sp/>-<sp/>(((<ref refid="archive_2bgeigie__firmware__pio_2src_2configuration__server_8cpp_1aed8613cf8a8e4ab677db757821414653" kindref="member">float</ref>)_cpm_raw<sp/>*<sp/>1.8833e-6))));</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>peak<sp/>measurement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_cpm_comp<sp/>&gt;<sp/>_cpm_comp_peak)<sp/>_cpm_comp_peak<sp/>=<sp/>_cpm_comp;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>micro-Sieverts<sp/>per<sp/>hour<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>_uSv<sp/>=<sp/>_cpm_comp<sp/>*<sp/>_ush_factor;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>_Bqm2<sp/>=<sp/>_cpm_comp<sp/>*<sp/>_bqm2_factor;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>_available<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="archive/bgeigie_firmware_pio/src/geiger_counter.cpp"/>
  </compounddef>
</doxygen>
