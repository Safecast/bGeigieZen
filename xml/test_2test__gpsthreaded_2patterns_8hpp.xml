<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="test_2test__gpsthreaded_2patterns_8hpp" kind="file" language="C++">
    <compoundname>patterns.hpp</compoundname>
    <includes local="no">forward_list</includes>
    <includedby refid="test_2test__gpsthreaded_2measurements_8hpp" local="yes">archive/test/test_gpsthreaded/measurements.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>archive/test/test_gpsthreaded/patterns.hpp</label>
        <link refid="test_2test__gpsthreaded_2patterns_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>forward_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>archive/test/test_gpsthreaded/measurements.hpp</label>
        <link refid="test_2test__gpsthreaded_2measurements_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>archive/test/test_gpsthreaded/patterns.hpp</label>
        <link refid="test_2test__gpsthreaded_2patterns_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>archive/test/test_gpsthreaded/threaded_gps.cpp</label>
        <link refid="test_2test__gpsthreaded_2threaded__gps_8cpp"/>
      </node>
      <node id="3">
        <label>archive/test/test_gpsthreaded/threaded_gps.hpp</label>
        <link refid="test_2test__gpsthreaded_2threaded__gps_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_observer" prot="public">Observer</innerclass>
    <innerclass refid="class_subject" prot="public">Subject</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__PATTERNS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PATTERNS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;forward_list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_observer" kindref="compound">Observer</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="9" refid="class_observer_1ac75e4b339faeb3ea6fe0a01bf0b4a215" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_observer_1ac75e4b339faeb3ea6fe0a01bf0b4a215" kindref="member">update</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10"><highlight class="normal">};</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_subject" kindref="compound">Subject</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::forward_list&lt;Observer<sp/>*&gt;<sp/>observers;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18" refid="class_subject_1a91cb4e6bb958acf74de6cf82142215f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_subject_1a91cb4e6bb958acf74de6cf82142215f8" kindref="member">register_observer</ref>(<ref refid="class_observer" kindref="compound">Observer</ref><sp/>*<ref refid="archive_2bgeigie__firmware__pio_2src_2configuration__server_8cpp_1aed8613cf8a8e4ab677db757821414653" kindref="member">obs</ref>)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>observers.push_front(<ref refid="archive_2bgeigie__firmware__pio_2src_2configuration__server_8cpp_1aed8613cf8a8e4ab677db757821414653" kindref="member">obs</ref>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal">};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>__PATTERNS_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="archive/test/test_gpsthreaded/patterns.hpp"/>
  </compounddef>
</doxygen>
