<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_circular_buffer" kind="class" language="C++" prot="public">
    <compoundname>CircularBuffer</compoundname>
    <includes refid="circular__buffer_8h" local="no">circular_buffer.h</includes>
    <templateparamlist>
      <param>
        <type><ref refid="archive_2bgeigie__firmware__pio_2src_2configuration__server_8cpp_1aed8613cf8a8e4ab677db757821414653" kindref="member">typename</ref> <ref refid="archive_2bgeigie__firmware__pio_2src_2configuration__server_8cpp_1aed8613cf8a8e4ab677db757821414653" kindref="member">T</ref></type>
      </param>
      <param>
        <type>uint16_t</type>
        <declname>max</declname>
        <defname>max</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_circular_buffer_1a0ea48a1b0713073cf1da9c574525c528" prot="private" static="no" mutable="no">
        <type><ref refid="archive_2bgeigie__firmware__pio_2src_2configuration__server_8cpp_1aed8613cf8a8e4ab677db757821414653" kindref="member">T</ref></type>
        <definition>T CircularBuffer&lt; T, max &gt;::buffer[max]</definition>
        <argsstring>[max]</argsstring>
        <name>buffer</name>
        <qualifiedname>CircularBuffer::buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bgeigiezen_firmware/utils/circular_buffer.h" line="66" column="5" bodyfile="bgeigiezen_firmware/utils/circular_buffer.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_circular_buffer_1a9ffd7b92305587d67354a47be959a95b" prot="private" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t CircularBuffer&lt; T, max &gt;::count</definition>
        <argsstring></argsstring>
        <name>count</name>
        <qualifiedname>CircularBuffer::count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bgeigiezen_firmware/utils/circular_buffer.h" line="67" column="12" bodyfile="bgeigiezen_firmware/utils/circular_buffer.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_circular_buffer_1a5cfd21f290b00cd9028af0c823b30ea4" prot="private" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t CircularBuffer&lt; T, max &gt;::current</definition>
        <argsstring></argsstring>
        <name>current</name>
        <qualifiedname>CircularBuffer::current</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bgeigiezen_firmware/utils/circular_buffer.h" line="68" column="12" bodyfile="bgeigiezen_firmware/utils/circular_buffer.h" bodystart="68" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_circular_buffer_1ae5513c56e103fc3e1c9c08cbf936572f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CircularBuffer&lt; T, max &gt;::CircularBuffer</definition>
        <argsstring>()</argsstring>
        <name>CircularBuffer</name>
        <qualifiedname>CircularBuffer::CircularBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bgeigiezen_firmware/utils/circular_buffer.h" line="13" column="3" bodyfile="bgeigiezen_firmware/utils/circular_buffer.h" bodystart="13" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="class_circular_buffer_1ae8842f72196d85e4a063c2c902c457c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual CircularBuffer&lt; T, max &gt;::~CircularBuffer</definition>
        <argsstring>()=default</argsstring>
        <name>~CircularBuffer</name>
        <qualifiedname>CircularBuffer::~CircularBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bgeigiezen_firmware/utils/circular_buffer.h" line="14" column="11"/>
      </memberdef>
      <memberdef kind="function" id="class_circular_buffer_1aec4bafc7deeb262f067a93779eba3ae1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="archive_2bgeigie__firmware__pio_2src_2configuration__server_8cpp_1aed8613cf8a8e4ab677db757821414653" kindref="member">const</ref> <ref refid="archive_2bgeigie__firmware__pio_2src_2configuration__server_8cpp_1aed8613cf8a8e4ab677db757821414653" kindref="member">T</ref> &amp;</type>
        <definition>const T &amp; CircularBuffer&lt; T, max &gt;::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <qualifiedname>CircularBuffer::get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the next value from the buffer, should check if buffer is not empty before calling this <simplesect kind="return"><para>: next value T </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bgeigiezen_firmware/utils/circular_buffer.h" line="20" column="11" bodyfile="bgeigiezen_firmware/utils/circular_buffer.h" bodystart="20" bodyend="26"/>
        <references refid="archive_2bgeigie__firmware__pio_2src_2configuration__server_8cpp_1aed8613cf8a8e4ab677db757821414653" compoundref="archive_2bgeigie__firmware__pio_2src_2configuration__server_8cpp" startline="13" endline="16">clamp</references>
      </memberdef>
      <memberdef kind="function" id="class_circular_buffer_1ac319f16578a13883bbe0e261efb18264" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="archive_2bgeigie__firmware__pio_2src_2configuration__server_8cpp_1aed8613cf8a8e4ab677db757821414653" kindref="member">void</ref></type>
        <definition>void CircularBuffer&lt; T, max &gt;::add</definition>
        <argsstring>(const T &amp;val)</argsstring>
        <name>add</name>
        <qualifiedname>CircularBuffer::add</qualifiedname>
        <param>
          <type><ref refid="archive_2bgeigie__firmware__pio_2src_2configuration__server_8cpp_1aed8613cf8a8e4ab677db757821414653" kindref="member">const</ref> <ref refid="archive_2bgeigie__firmware__pio_2src_2configuration__server_8cpp_1aed8613cf8a8e4ab677db757821414653" kindref="member">T</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a value to the buffer. If the buffer is full, it will throw away the oldest value and add this. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bgeigiezen_firmware/utils/circular_buffer.h" line="32" column="8" bodyfile="bgeigiezen_firmware/utils/circular_buffer.h" bodystart="32" bodyend="40"/>
        <references refid="archive_2bgeigie__firmware__pio_2src_2configuration__server_8cpp_1aed8613cf8a8e4ab677db757821414653" compoundref="archive_2bgeigie__firmware__pio_2src_2configuration__server_8cpp" startline="13" endline="16">clamp</references>
        <referencedby refid="hardware__counter_8cpp_1a332e473d9db05aedc2fa329a3e3392cf" compoundref="hardware__counter_8cpp" startline="17" endline="20">timer_intr_handler</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_circular_buffer_1a1d3a28b8a5f3236ca01a50ad9ca9ffec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="archive_2bgeigie__firmware__pio_2src_2configuration__server_8cpp_1aed8613cf8a8e4ab677db757821414653" kindref="member">bool</ref></type>
        <definition>bool CircularBuffer&lt; T, max &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>CircularBuffer::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the buffer is empty <simplesect kind="return"><para>: true if buffer is empty </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bgeigiezen_firmware/utils/circular_buffer.h" line="46" column="8" bodyfile="bgeigiezen_firmware/utils/circular_buffer.h" bodystart="46" bodyend="48"/>
        <referencedby refid="class_hardware_counter_1a0993c664a4e77d31ff2556e9f6143021" compoundref="hardware__counter_8cpp" startline="33" endline="35">HardwareCounter::available</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_circular_buffer_1abb835c1cc35eaee943fd84b021b1662d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t CircularBuffer&lt; T, max &gt;::get_count</definition>
        <argsstring>() const</argsstring>
        <name>get_count</name>
        <qualifiedname>CircularBuffer::get_count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the amount of items in the buffer <simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bgeigiezen_firmware/utils/circular_buffer.h" line="54" column="12" bodyfile="bgeigiezen_firmware/utils/circular_buffer.h" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_circular_buffer_1a2bd3f654116f61d1214ed99713d28c2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="archive_2bgeigie__firmware__pio_2src_2configuration__server_8cpp_1aed8613cf8a8e4ab677db757821414653" kindref="member">void</ref></type>
        <definition>void CircularBuffer&lt; T, max &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>CircularBuffer::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear the buffer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bgeigiezen_firmware/utils/circular_buffer.h" line="61" column="8" bodyfile="bgeigiezen_firmware/utils/circular_buffer.h" bodystart="61" bodyend="63"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Simple circular buffer <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>max items in buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="bgeigiezen_firmware/utils/circular_buffer.h" line="11" column="1" bodyfile="bgeigiezen_firmware/utils/circular_buffer.h" bodystart="11" bodyend="69"/>
    <listofallmembers>
      <member refid="class_circular_buffer_1ac319f16578a13883bbe0e261efb18264" prot="public" virt="non-virtual"><scope>CircularBuffer</scope><name>add</name></member>
      <member refid="class_circular_buffer_1a0ea48a1b0713073cf1da9c574525c528" prot="private" virt="non-virtual"><scope>CircularBuffer</scope><name>buffer</name></member>
      <member refid="class_circular_buffer_1ae5513c56e103fc3e1c9c08cbf936572f" prot="public" virt="non-virtual"><scope>CircularBuffer</scope><name>CircularBuffer</name></member>
      <member refid="class_circular_buffer_1a2bd3f654116f61d1214ed99713d28c2b" prot="public" virt="non-virtual"><scope>CircularBuffer</scope><name>clear</name></member>
      <member refid="class_circular_buffer_1a9ffd7b92305587d67354a47be959a95b" prot="private" virt="non-virtual"><scope>CircularBuffer</scope><name>count</name></member>
      <member refid="class_circular_buffer_1a5cfd21f290b00cd9028af0c823b30ea4" prot="private" virt="non-virtual"><scope>CircularBuffer</scope><name>current</name></member>
      <member refid="class_circular_buffer_1a1d3a28b8a5f3236ca01a50ad9ca9ffec" prot="public" virt="non-virtual"><scope>CircularBuffer</scope><name>empty</name></member>
      <member refid="class_circular_buffer_1aec4bafc7deeb262f067a93779eba3ae1" prot="public" virt="non-virtual"><scope>CircularBuffer</scope><name>get</name></member>
      <member refid="class_circular_buffer_1abb835c1cc35eaee943fd84b021b1662d" prot="public" virt="non-virtual"><scope>CircularBuffer</scope><name>get_count</name></member>
      <member refid="class_circular_buffer_1ae8842f72196d85e4a063c2c902c457c5" prot="public" virt="virtual"><scope>CircularBuffer</scope><name>~CircularBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
