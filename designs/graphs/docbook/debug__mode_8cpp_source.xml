<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_debug__mode_8cpp_source" xml:lang="en-US">
<title>debug_mode.cpp</title>
<indexterm><primary>bgeigiezen_firmware/screens/debug_mode.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_debug__mode_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_debug__mode_8h">debug_mode.h</link>&quot;</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_debugger_8h">debugger.h</link>&quot;</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_identifiers_8h">identifiers.h</link>&quot;</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_menu__window_8h">menu_window.h</link>&quot;</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_battery__indicator_8h">workers/battery_indicator.h</link>&quot;</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_gm__sensor_8h">workers/gm_sensor.h</link>&quot;</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_gps__connector_8h">workers/gps_connector.h</link>&quot;</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_log__aggregator_8h">workers/log_aggregator.h</link>&quot;</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_rtc__connector_8h">workers/rtc_connector.h</link>&quot;</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00010"/>00010 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_zen__button_8h">workers/zen_button.h</link>&quot;</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00011"/>00011 
<anchor xml:id="_debug__mode_8cpp_source_1l00012"/>00012 DebugModeScreen::DebugModeScreen()&#32;:&#32;<link linkend="_class_base_screen">BaseScreen</link>(<emphasis role="stringliteral">&quot;Debug&quot;</emphasis>,&#32;true)&#32;{
<anchor xml:id="_debug__mode_8cpp_source_1l00013"/>00013 }
<anchor xml:id="_debug__mode_8cpp_source_1l00014"/>00014 
<anchor xml:id="_debug__mode_8cpp_source_1l00015"/><link linkend="_class_debug_mode_screen_1a74b4a2f357094dcda42fffe968067b28">00015</link> <link linkend="_class_base_screen">BaseScreen</link>*&#32;<link linkend="_class_debug_mode_screen_1a74b4a2f357094dcda42fffe968067b28">DebugModeScreen::handle_input</link>(<link linkend="_class_controller">Controller</link>&amp;&#32;<link linkend="_main_8cpp_1acbf63899b68f8f761edd965e7bf64ddd">controller</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;worker_map_t&amp;&#32;workers)&#32;{
<anchor xml:id="_debug__mode_8cpp_source_1l00016"/>00016 &#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;menu_button&#32;=&#32;workers.worker&lt;<link linkend="_class_zen_button">ZenButton</link>&gt;(<link linkend="_identifiers_8h_1a817945491edcfa653f61f26e522cd76fa824a84bb0222b57ea4966a17b90b110c">k_worker_button_3</link>);
<anchor xml:id="_debug__mode_8cpp_source_1l00017"/>00017 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(menu_button-&gt;is_fresh()&#32;&amp;&amp;&#32;menu_button-&gt;get_data().shortPress)&#32;{
<anchor xml:id="_debug__mode_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_menu_window_1a9c91d3d091851ede9828695486d29de1">MenuWindow::i</link>();
<anchor xml:id="_debug__mode_8cpp_source_1l00019"/>00019 &#32;&#32;}
<anchor xml:id="_debug__mode_8cpp_source_1l00020"/>00020 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_debug__mode_8cpp_source_1l00021"/>00021 }
<anchor xml:id="_debug__mode_8cpp_source_1l00022"/>00022 
<anchor xml:id="_debug__mode_8cpp_source_1l00023"/><link linkend="_class_debug_mode_screen_1af5a52170b297c87f33e5eea935f8ca04">00023</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_debug_mode_screen_1af5a52170b297c87f33e5eea935f8ca04">DebugModeScreen::render</link>(<emphasis role="keyword">const</emphasis>&#32;worker_map_t&amp;&#32;workers,&#32;<emphasis role="keyword">const</emphasis>&#32;handler_map_t&amp;&#32;handlers,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;force)&#32;{
<anchor xml:id="_debug__mode_8cpp_source_1l00025"/>00025 &#32;&#32;<emphasis role="comment">//&#32;Display&#32;something</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00026"/>00026 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;<link linkend="_main_8cpp_1ae315ca7ebbecaa6191fce20ca109a21b">gm_sensor</link>&#32;=&#32;workers.worker&lt;<link linkend="_class_geiger_counter">GeigerCounter</link>&gt;(<link linkend="_identifiers_8h_1a817945491edcfa653f61f26e522cd76fadce40ed07be9b46afdd704f59b77a907">k_worker_gm_sensor</link>);
<anchor xml:id="_debug__mode_8cpp_source_1l00027"/>00027 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>&#32;=&#32;workers.worker&lt;<link linkend="_class_gps_connector">GpsConnector</link>&gt;(<link linkend="_identifiers_8h_1a817945491edcfa653f61f26e522cd76fa2cb0209f1a3ab9da14313d7681eda211">k_worker_gps_connector</link>);
<anchor xml:id="_debug__mode_8cpp_source_1l00028"/>00028 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;battery&#32;=&#32;workers.worker&lt;<link linkend="_class_battery_indicator">BatteryIndicator</link>&gt;(<link linkend="_identifiers_8h_1a817945491edcfa653f61f26e522cd76fa6daa8cab2f33582eddf479bf8dc018d9">k_worker_battery_indicator</link>);
<anchor xml:id="_debug__mode_8cpp_source_1l00029"/>00029 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;<link linkend="_main_8cpp_1a07c2d18832864fb5bb1417ce6cb8dbce">rtc</link>&#32;=&#32;workers.worker&lt;<link linkend="_class_rtc_connector">RtcConnector</link>&gt;(<link linkend="_identifiers_8h_1a817945491edcfa653f61f26e522cd76fa84141b7b60c4055e432a1f28ae9aa98b">k_worker_rtc_connector</link>);
<anchor xml:id="_debug__mode_8cpp_source_1l00030"/>00030 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;<link linkend="_main_8cpp_1a14fad6b96fd26bd4219043784815c08b">log_aggregator</link>&#32;=&#32;workers.worker&lt;<link linkend="_class_log_aggregator">LogAggregator</link>&gt;(<link linkend="_identifiers_8h_1a817945491edcfa653f61f26e522cd76fa40dd481c8643b09aff483e9f4f7c2006">k_worker_log_aggregator</link>);
<anchor xml:id="_debug__mode_8cpp_source_1l00031"/>00031 
<anchor xml:id="_debug__mode_8cpp_source_1l00032"/>00032 &#32;&#32;<link linkend="_class_base_screen_1ac4042332f3362042ed3390297c8f1ea1">drawButton1</link>(<emphasis role="stringliteral">&quot;&quot;</emphasis>);
<anchor xml:id="_debug__mode_8cpp_source_1l00033"/>00033 &#32;&#32;<link linkend="_class_base_screen_1ad7040cea50962276539e67ac129d5c7c">drawButton2</link>(<emphasis role="stringliteral">&quot;&quot;</emphasis>);
<anchor xml:id="_debug__mode_8cpp_source_1l00034"/>00034 &#32;&#32;<link linkend="_class_base_screen_1a00da29022f614d7e72fd218ba1dcf747">drawButton3</link>(<emphasis role="stringliteral">&quot;Menu&quot;</emphasis>);
<anchor xml:id="_debug__mode_8cpp_source_1l00035"/>00035 
<anchor xml:id="_debug__mode_8cpp_source_1l00036"/>00036 &#32;&#32;M5.Lcd.setTextColor(<link linkend="_user__config_8h_1a021c81a43f7ae4baa15b51dfabe87e62">LCD_COLOR_DEFAULT</link>,&#32;<link linkend="_user__config_8h_1abda62c97ed73836f3749f74f4de6664a">LCD_COLOR_BACKGROUND</link>);
<anchor xml:id="_debug__mode_8cpp_source_1l00037"/>00037 &#32;&#32;M5.Lcd.setCursor(0,&#32;25);
<anchor xml:id="_debug__mode_8cpp_source_1l00038"/>00038 &#32;&#32;M5.Lcd.printf(<emphasis role="stringliteral">&quot;Battery:&#32;%d%%&#32;%s\n&quot;</emphasis>,
<anchor xml:id="_debug__mode_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;battery-&gt;get_data().percentage,
<anchor xml:id="_debug__mode_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;battery-&gt;get_data().isCharging&#32;?&#32;<emphasis role="stringliteral">&quot;(charging)&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;</emphasis>);
<anchor xml:id="_debug__mode_8cpp_source_1l00041"/>00041 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_main_8cpp_1ae315ca7ebbecaa6191fce20ca109a21b">gm_sensor</link>-&gt;get_active_state()&#32;==&#32;GeigerCounter::e_state_active)&#32;{
<anchor xml:id="_debug__mode_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;M5.Lcd.printf(<emphasis role="stringliteral">&quot;Geiger&#32;counter&#32;%s\n&quot;</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;CPM:&#32;raw&#32;%d,&#32;comp&#32;%d&#32;%s\n&#32;&#32;&#32;&#32;&#32;&#32;uSv/h:&#32;%.4f,&#32;&#32;Bq/m2:&#32;%.0f&#32;&#32;&#32;\n&quot;</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;CP5S:&#32;%d,&#32;&#32;uSv/h:&#32;%.4f,&#32;&#32;Bq/m2:&#32;%.0f&#32;&#32;&#32;&#32;&#32;&#32;\n&quot;</emphasis>,
<anchor xml:id="_debug__mode_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ae315ca7ebbecaa6191fce20ca109a21b">gm_sensor</link>-&gt;get_data().valid&#32;?&#32;<emphasis role="stringliteral">&quot;(valid)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;(collecting&#32;data...)&quot;</emphasis>,
<anchor xml:id="_debug__mode_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ae315ca7ebbecaa6191fce20ca109a21b">gm_sensor</link>-&gt;get_data().cpm_raw,
<anchor xml:id="_debug__mode_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ae315ca7ebbecaa6191fce20ca109a21b">gm_sensor</link>-&gt;get_data().cpm_comp,
<anchor xml:id="_debug__mode_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ae315ca7ebbecaa6191fce20ca109a21b">gm_sensor</link>-&gt;get_data().alert&#32;?&#32;<emphasis role="stringliteral">&quot;A&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,
<anchor xml:id="_debug__mode_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ae315ca7ebbecaa6191fce20ca109a21b">gm_sensor</link>-&gt;get_data().uSv,
<anchor xml:id="_debug__mode_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ae315ca7ebbecaa6191fce20ca109a21b">gm_sensor</link>-&gt;get_data().Bqm2,
<anchor xml:id="_debug__mode_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ae315ca7ebbecaa6191fce20ca109a21b">gm_sensor</link>-&gt;get_data().cp5s,
<anchor xml:id="_debug__mode_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ae315ca7ebbecaa6191fce20ca109a21b">gm_sensor</link>-&gt;get_data().uSv_5sec,
<anchor xml:id="_debug__mode_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ae315ca7ebbecaa6191fce20ca109a21b">gm_sensor</link>-&gt;get_data().Bqm2_5sec);
<anchor xml:id="_debug__mode_8cpp_source_1l00054"/>00054 &#32;&#32;}
<anchor xml:id="_debug__mode_8cpp_source_1l00055"/>00055 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_debug__mode_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;M5.Lcd.printf(<emphasis role="stringliteral">&quot;Geiger&#32;counter\n&#32;Module&#32;not&#32;available\n\n&quot;</emphasis>);
<anchor xml:id="_debug__mode_8cpp_source_1l00057"/>00057 &#32;&#32;}
<anchor xml:id="_debug__mode_8cpp_source_1l00058"/>00058 
<anchor xml:id="_debug__mode_8cpp_source_1l00059"/>00059 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_active_state()&#32;==&#32;GpsConnector::e_state_active)&#32;{
<anchor xml:id="_debug__mode_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;M5.Lcd.printf(<emphasis role="stringliteral">&quot;GPS&#32;%s\n&quot;</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;location:&#32;%s&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\n&quot;</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;lat,&#32;long,&#32;altitude&#32;(MSL),&#32;HDOP:\n&quot;</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;%.5f,&#32;%.5f,&#32;%.2f,&#32;%.1f&#32;\n&quot;</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;satellites:&#32;%d&#32;%s&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\n&quot;</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;date:&#32;%04d-%02d-%02d&#32;%s&#32;&#32;&#32;&#32;&#32;\n&quot;</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;time:&#32;%02d:%02d:%02d&#32;%s&#32;&#32;&#32;&#32;&#32;\n&quot;</emphasis>,
<anchor xml:id="_debug__mode_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().valid()&#32;?&#32;<emphasis role="stringliteral">&quot;(valid)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;(incomplete...)&quot;</emphasis>,
<anchor xml:id="_debug__mode_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().location_valid&#32;?&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;(unavailable)&quot;</emphasis>,
<anchor xml:id="_debug__mode_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().latitude,
<anchor xml:id="_debug__mode_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().longitude,
<anchor xml:id="_debug__mode_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().altitudeMSL,
<anchor xml:id="_debug__mode_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().hdop,
<anchor xml:id="_debug__mode_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().satsInView,
<anchor xml:id="_debug__mode_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().satellites_valid&#32;?&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;(unavailable)&quot;</emphasis>,
<anchor xml:id="_debug__mode_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().date_valid&#32;?&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().year&#32;:&#32;0,
<anchor xml:id="_debug__mode_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().date_valid&#32;?&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().month&#32;:&#32;0,
<anchor xml:id="_debug__mode_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().date_valid&#32;?&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().day&#32;:&#32;0,
<anchor xml:id="_debug__mode_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().date_valid&#32;?&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;(unavailable)&quot;</emphasis>,
<anchor xml:id="_debug__mode_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().time_valid&#32;?&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().hour&#32;:&#32;0,
<anchor xml:id="_debug__mode_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().time_valid&#32;?&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().minute&#32;:&#32;0,
<anchor xml:id="_debug__mode_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().time_valid&#32;?&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().second&#32;:&#32;0,
<anchor xml:id="_debug__mode_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1ad0efad1d9b5c57a17909a5d741fa2403">gps</link>-&gt;get_data().time_valid&#32;?&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;(unavailable)&quot;</emphasis>);
<anchor xml:id="_debug__mode_8cpp_source_1l00083"/>00083 &#32;&#32;}
<anchor xml:id="_debug__mode_8cpp_source_1l00084"/>00084 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_debug__mode_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;M5.Lcd.printf(<emphasis role="stringliteral">&quot;GPS\n&#32;Module&#32;not&#32;available\n\n&quot;</emphasis>);
<anchor xml:id="_debug__mode_8cpp_source_1l00086"/>00086 &#32;&#32;}
<anchor xml:id="_debug__mode_8cpp_source_1l00087"/>00087 
<anchor xml:id="_debug__mode_8cpp_source_1l00088"/>00088 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_main_8cpp_1a07c2d18832864fb5bb1417ce6cb8dbce">rtc</link>-&gt;get_active_state()&#32;==&#32;RtcConnector::e_state_active)&#32;{
<anchor xml:id="_debug__mode_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;M5.Lcd.printf(<emphasis role="stringliteral">&quot;RTC\n&quot;</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;VoltLow:&#32;%s\n&quot;</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;date:&#32;%04d-%02d-%02d&#32;time:&#32;%02d:%02d:%02d\n&quot;</emphasis>,
<anchor xml:id="_debug__mode_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1a07c2d18832864fb5bb1417ce6cb8dbce">rtc</link>-&gt;get_data().low_voltage&#32;?&#32;<emphasis role="stringliteral">&quot;Low&#32;voltage&#32;&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;Voltage&#32;good&quot;</emphasis>,
<anchor xml:id="_debug__mode_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1a07c2d18832864fb5bb1417ce6cb8dbce">rtc</link>-&gt;get_data().year,
<anchor xml:id="_debug__mode_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1a07c2d18832864fb5bb1417ce6cb8dbce">rtc</link>-&gt;get_data().month,
<anchor xml:id="_debug__mode_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1a07c2d18832864fb5bb1417ce6cb8dbce">rtc</link>-&gt;get_data().day,
<anchor xml:id="_debug__mode_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1a07c2d18832864fb5bb1417ce6cb8dbce">rtc</link>-&gt;get_data().hour,
<anchor xml:id="_debug__mode_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1a07c2d18832864fb5bb1417ce6cb8dbce">rtc</link>-&gt;get_data().minute,
<anchor xml:id="_debug__mode_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1a07c2d18832864fb5bb1417ce6cb8dbce">rtc</link>-&gt;get_data().second);
<anchor xml:id="_debug__mode_8cpp_source_1l00099"/>00099 &#32;&#32;}
<anchor xml:id="_debug__mode_8cpp_source_1l00100"/>00100 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_debug__mode_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;M5.Lcd.printf(<emphasis role="stringliteral">&quot;RTC\n&#32;Module&#32;not&#32;available\n\n&quot;</emphasis>);
<anchor xml:id="_debug__mode_8cpp_source_1l00102"/>00102 &#32;&#32;}
<anchor xml:id="_debug__mode_8cpp_source_1l00103"/>00103 
<anchor xml:id="_debug__mode_8cpp_source_1l00104"/>00104 &#32;&#32;M5.Lcd.printf(<emphasis role="stringliteral">&quot;Logging&#32;data\n&quot;</emphasis>
<anchor xml:id="_debug__mode_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;Log&#32;string:&#32;%s\n&quot;</emphasis>,
<anchor xml:id="_debug__mode_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1a14fad6b96fd26bd4219043784815c08b">log_aggregator</link>-&gt;get_data().log_string);
<anchor xml:id="_debug__mode_8cpp_source_1l00107"/>00107 }
</programlisting></section>
