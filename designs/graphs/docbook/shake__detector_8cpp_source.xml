<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_shake__detector_8cpp_source" xml:lang="en-US">
<title>shake_detector.cpp</title>
<indexterm><primary>bgeigiezen_firmware/workers/shake_detector.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_shake__detector_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#ifdef&#32;M5_CORE2</emphasis>
<anchor xml:id="_shake__detector_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&lt;M5Core2.h&gt;</emphasis>
<anchor xml:id="_shake__detector_8cpp_source_1l00003"/>00003 <emphasis role="preprocessor">#elif&#32;M5_BASIC</emphasis>
<anchor xml:id="_shake__detector_8cpp_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;M5Stack.h&gt;</emphasis>
<anchor xml:id="_shake__detector_8cpp_source_1l00005"/>00005 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_shake__detector_8cpp_source_1l00006"/>00006 
<anchor xml:id="_shake__detector_8cpp_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_shake__detector_8h">shake_detector.h</link>&quot;</emphasis>
<anchor xml:id="_shake__detector_8cpp_source_1l00008"/>00008 
<anchor xml:id="_shake__detector_8cpp_source_1l00009"/><link linkend="_class_shake_detector_1a9cbb698212292255a2b60c09a9d340d7">00009</link> <link linkend="_class_shake_detector_1a9cbb698212292255a2b60c09a9d340d7">ShakeDetector::ShakeDetector</link>()
<anchor xml:id="_shake__detector_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;:&#32;Worker&lt;bool&gt;(false,&#32;100),
<anchor xml:id="_shake__detector_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;_gyroX(0),
<anchor xml:id="_shake__detector_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;_gyroY(0),
<anchor xml:id="_shake__detector_8cpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;_gyroZ(0),
<anchor xml:id="_shake__detector_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;_accX(0),
<anchor xml:id="_shake__detector_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;_accY(0),
<anchor xml:id="_shake__detector_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;_accZ(0),
<anchor xml:id="_shake__detector_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;_pitch(0),
<anchor xml:id="_shake__detector_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;_roll(0),
<anchor xml:id="_shake__detector_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;_yaw(0),
<anchor xml:id="_shake__detector_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;_temp(0)&#32;{
<anchor xml:id="_shake__detector_8cpp_source_1l00021"/>00021 }
<anchor xml:id="_shake__detector_8cpp_source_1l00022"/>00022 
<anchor xml:id="_shake__detector_8cpp_source_1l00023"/><link linkend="_class_shake_detector_1a5dc083162379d0ba05a98c4507024d3d">00023</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_shake_detector_1a5dc083162379d0ba05a98c4507024d3d">ShakeDetector::activate</link>(<emphasis role="keywordtype">bool</emphasis>&#32;retry)&#32;{
<anchor xml:id="_shake__detector_8cpp_source_1l00024"/>00024 <emphasis role="preprocessor">#ifdef&#32;M5_BASIC</emphasis>
<anchor xml:id="_shake__detector_8cpp_source_1l00025"/>00025 &#32;&#32;M5.IMU.Init();
<anchor xml:id="_shake__detector_8cpp_source_1l00026"/>00026 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_shake__detector_8cpp_source_1l00027"/>00027 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_shake__detector_8cpp_source_1l00028"/>00028 }
<anchor xml:id="_shake__detector_8cpp_source_1l00029"/>00029 
<anchor xml:id="_shake__detector_8cpp_source_1l00030"/><link linkend="_class_shake_detector_1ab893081444f2674bd8b26c76a445d83b">00030</link> int8_t&#32;<link linkend="_class_shake_detector_1ab893081444f2674bd8b26c76a445d83b">ShakeDetector::produce_data</link>()&#32;{
<anchor xml:id="_shake__detector_8cpp_source_1l00031"/>00031 <emphasis role="preprocessor">#ifdef&#32;M5_BASIC</emphasis>
<anchor xml:id="_shake__detector_8cpp_source_1l00032"/>00032 <emphasis role="comment">//&#32;&#32;M5.IMU.getGyroData(&amp;_gyroX,&#32;&amp;_gyroY,&#32;&amp;_gyroZ);</emphasis>
<anchor xml:id="_shake__detector_8cpp_source_1l00033"/>00033 <emphasis role="comment">//&#32;&#32;M5.IMU.getAccelData(&amp;_accX,&#32;&amp;_accY,&#32;&amp;_accZ);</emphasis>
<anchor xml:id="_shake__detector_8cpp_source_1l00034"/>00034 <emphasis role="comment">//&#32;&#32;M5.IMU.getAhrsData(&amp;_pitch,&#32;&amp;_roll,&#32;&amp;_yaw);</emphasis>
<anchor xml:id="_shake__detector_8cpp_source_1l00035"/>00035 <emphasis role="comment">//&#32;&#32;M5.IMU.getTempData(&amp;_temp);</emphasis>
<anchor xml:id="_shake__detector_8cpp_source_1l00036"/>00036 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_shake__detector_8cpp_source_1l00037"/>00037 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;e_worker_idle;
<anchor xml:id="_shake__detector_8cpp_source_1l00038"/>00038 }
</programlisting></section>
