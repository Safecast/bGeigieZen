<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_gps__connector_8cpp_source" xml:lang="en-US">
<title>gps_connector.cpp</title>
<indexterm><primary>bgeigiezen_firmware/workers/gps_connector.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_gps__connector_8cpp_source_1l00001"/>00001 
<anchor xml:id="_gps__connector_8cpp_source_1l00016"/>00016 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_gps__connector_8h">gps_connector.h</link>&quot;</emphasis>
<anchor xml:id="_gps__connector_8cpp_source_1l00017"/>00017 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_debugger_8h">debugger.h</link>&quot;</emphasis>
<anchor xml:id="_gps__connector_8cpp_source_1l00018"/>00018 
<anchor xml:id="_gps__connector_8cpp_source_1l00019"/><link linkend="_class_gps_connector_1aa7063a9ff75593b35995241c579b070f">00019</link> <link linkend="_class_gps_connector_1aa7063a9ff75593b35995241c579b070f">GpsConnector::GpsConnector</link>(uint8_t&#32;gps_serial_num,&#32;SFE_UBLOX_GNSS&amp;&#32;<link linkend="_main_8cpp_1aa58ff36b40f59925c16651a5344ebfa8">gnss</link>)&#32;:&#32;Worker&lt;<link linkend="_struct_gnss_data">GnssData</link>&gt;(),&#32;<link linkend="_main_8cpp_1aa58ff36b40f59925c16651a5344ebfa8">gnss</link>(<link linkend="_main_8cpp_1aa58ff36b40f59925c16651a5344ebfa8">gnss</link>),&#32;ss(gps_serial_num),&#32;tried_38400_at(0),&#32;tried_9600_at(0),&#32;_init_at(0)&#32;{
<anchor xml:id="_gps__connector_8cpp_source_1l00020"/>00020 }
<anchor xml:id="_gps__connector_8cpp_source_1l00024"/><link linkend="_class_gps_connector_1ae9c39a62d97e5491bb420cba02df2a98">00024</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_gps_connector_1ae9c39a62d97e5491bb420cba02df2a98">GpsConnector::activate</link>(<emphasis role="keywordtype">bool</emphasis>&#32;retry)&#32;{
<anchor xml:id="_gps__connector_8cpp_source_1l00025"/>00025 &#32;&#32;<emphasis role="comment">//&#32;From&#32;Sparkfun&#32;examples/Example12_UseUart</emphasis>
<anchor xml:id="_gps__connector_8cpp_source_1l00026"/>00026 &#32;&#32;<emphasis role="comment">//&#32;Assume&#32;that&#32;the&#32;U-Blox&#32;GNSS&#32;is&#32;running&#32;at&#32;9600&#32;baud&#32;(the&#32;default)&#32;or&#32;at&#32;38400&#32;baud.</emphasis>
<anchor xml:id="_gps__connector_8cpp_source_1l00027"/>00027 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!retry)&#32;{
<anchor xml:id="_gps__connector_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;ss.begin(38400);
<anchor xml:id="_gps__connector_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;_init_at&#32;=&#32;millis();
<anchor xml:id="_gps__connector_8cpp_source_1l00030"/>00030 &#32;&#32;}
<anchor xml:id="_gps__connector_8cpp_source_1l00031"/>00031 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tried_38400_at&#32;==&#32;0&#32;&amp;&amp;&#32;(millis()&#32;-&#32;_init_at&#32;&gt;&#32;500))&#32;{&#32;<emphasis role="comment">//&#32;Wait&#32;for&#32;device&#32;to&#32;completely&#32;startup</emphasis>
<anchor xml:id="_gps__connector_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;tried_38400_at&#32;=&#32;millis();
<anchor xml:id="_gps__connector_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;ss.updateBaudRate(38400);
<anchor xml:id="_gps__connector_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gnss.begin(ss,&#32;500))&#32;{
<anchor xml:id="_gps__connector_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_debugger_8h_1a4f1aa9c2cc46934abb3416f96222cc40">DEBUG_PRINTLN</link>(<emphasis role="stringliteral">&quot;GNSS:&#32;connected&#32;at&#32;38400&#32;baud&quot;</emphasis>);
<anchor xml:id="_gps__connector_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;gnss.setSerialRate(38400);
<anchor xml:id="_gps__connector_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;}
<anchor xml:id="_gps__connector_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_gps__connector_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_gps__connector_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;}
<anchor xml:id="_gps__connector_8cpp_source_1l00041"/>00041 &#32;&#32;}
<anchor xml:id="_gps__connector_8cpp_source_1l00042"/>00042 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tried_9600_at&#32;==&#32;0&#32;&amp;&amp;&#32;tried_38400_at&#32;&gt;&#32;0&#32;&amp;&amp;&#32;(millis()&#32;-&#32;tried_38400_at&#32;&gt;&#32;500))&#32;{
<anchor xml:id="_gps__connector_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;tried_9600_at&#32;=&#32;millis();
<anchor xml:id="_gps__connector_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;ss.updateBaudRate(9600);
<anchor xml:id="_gps__connector_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gnss.begin(ss,&#32;500))&#32;{
<anchor xml:id="_gps__connector_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_debugger_8h_1a4f1aa9c2cc46934abb3416f96222cc40">DEBUG_PRINTLN</link>(<emphasis role="stringliteral">&quot;GNSS:&#32;connected&#32;at&#32;9600&#32;baud,&#32;switching&#32;to&#32;38400&quot;</emphasis>);
<anchor xml:id="_gps__connector_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;gnss.setSerialRate(38400);
<anchor xml:id="_gps__connector_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;}
<anchor xml:id="_gps__connector_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_gps__connector_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_gps__connector_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;}
<anchor xml:id="_gps__connector_8cpp_source_1l00052"/>00052 &#32;&#32;}
<anchor xml:id="_gps__connector_8cpp_source_1l00053"/>00053 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_gps__connector_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_gps__connector_8cpp_source_1l00055"/>00055 &#32;&#32;}
<anchor xml:id="_gps__connector_8cpp_source_1l00056"/>00056 
<anchor xml:id="_gps__connector_8cpp_source_1l00057"/>00057 &#32;&#32;<emphasis role="comment">//&#32;Confirm&#32;that&#32;we&#32;actually&#32;have&#32;a&#32;connection</emphasis>
<anchor xml:id="_gps__connector_8cpp_source_1l00058"/>00058 &#32;&#32;<link linkend="_debugger_8h_1a01e7feab704802b5523d4bf0054f0b61">DEBUG_PRINTF</link>(<emphasis role="stringliteral">&quot;GNSS:&#32;u-blox&#32;protocol&#32;version&#32;%02d.%02d\n&quot;</emphasis>,&#32;gnss.getProtocolVersionHigh(),&#32;gnss.getProtocolVersionLow());
<anchor xml:id="_gps__connector_8cpp_source_1l00059"/>00059 
<anchor xml:id="_gps__connector_8cpp_source_1l00060"/>00060 &#32;&#32;<emphasis role="comment">//&#32;Set&#32;Auto&#32;on&#32;NAV-PVT&#32;and&#32;NAV-DOP&#32;queries&#32;for&#32;non-blocking&#32;access</emphasis>
<anchor xml:id="_gps__connector_8cpp_source_1l00061"/>00061 &#32;&#32;<emphasis role="comment">//&#32;getPVT()&#32;and&#32;getDOP()&#32;will&#32;return&#32;true&#32;if&#32;a&#32;new&#32;navigation&#32;solution&#32;is&#32;available</emphasis>
<anchor xml:id="_gps__connector_8cpp_source_1l00062"/>00062 &#32;&#32;gnss.setAutoPVT(<emphasis role="keyword">true</emphasis>);&#32;<emphasis role="comment">//&#32;Tell&#32;the&#32;GNSS&#32;to&#32;&quot;send&quot;&#32;each&#32;solution</emphasis>
<anchor xml:id="_gps__connector_8cpp_source_1l00063"/>00063 &#32;&#32;gnss.setAutoDOP(<emphasis role="keyword">true</emphasis>);&#32;<emphasis role="comment">//&#32;Enable/disable&#32;automatic&#32;DOP&#32;reports&#32;at&#32;the&#32;navigation&#32;frequency</emphasis>
<anchor xml:id="_gps__connector_8cpp_source_1l00064"/>00064 
<anchor xml:id="_gps__connector_8cpp_source_1l00065"/>00065 &#32;&#32;<emphasis role="comment">//&#32;Mark&#32;the&#32;fix&#32;items&#32;invalid&#32;to&#32;start</emphasis>
<anchor xml:id="_gps__connector_8cpp_source_1l00066"/>00066 &#32;&#32;data.location_valid&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_gps__connector_8cpp_source_1l00067"/>00067 &#32;&#32;data.date_valid&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_gps__connector_8cpp_source_1l00068"/>00068 &#32;&#32;data.time_valid&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_gps__connector_8cpp_source_1l00069"/>00069 &#32;&#32;data.satellites_valid&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_gps__connector_8cpp_source_1l00070"/>00070 
<anchor xml:id="_gps__connector_8cpp_source_1l00071"/>00071 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_gps__connector_8cpp_source_1l00072"/>00072 }
<anchor xml:id="_gps__connector_8cpp_source_1l00073"/>00073 
<anchor xml:id="_gps__connector_8cpp_source_1l00074"/><link linkend="_class_gps_connector_1a772998cb4be0a4a1f4964e7dfc6962db">00074</link> int8_t&#32;<link linkend="_class_gps_connector_1a772998cb4be0a4a1f4964e7dfc6962db">GpsConnector::produce_data</link>()&#32;{
<anchor xml:id="_gps__connector_8cpp_source_1l00075"/>00075 &#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;ret_status&#32;=&#32;e_worker_idle;
<anchor xml:id="_gps__connector_8cpp_source_1l00076"/>00076 
<anchor xml:id="_gps__connector_8cpp_source_1l00077"/>00077 &#32;&#32;<emphasis role="comment">//&#32;getPVT&#32;and&#32;getDOP&#32;will&#32;return&#32;true&#32;if&#32;there&#32;actually&#32;is&#32;a&#32;fresh&#32;navigation&#32;solution</emphasis>
<anchor xml:id="_gps__connector_8cpp_source_1l00078"/>00078 &#32;&#32;<emphasis role="comment">//&#32;available.&#32;&quot;LLH&quot;&#32;is&#32;longitude,&#32;latitude,&#32;height.</emphasis>
<anchor xml:id="_gps__connector_8cpp_source_1l00079"/>00079 &#32;&#32;<emphasis role="comment">//&#32;getPVT()&#32;returns&#32;UTC&#32;date&#32;and&#32;time&#32;(do&#32;not&#32;use&#32;GNSS&#32;time,&#32;see&#32;note&#32;in&#32;u-blox&#32;spec)</emphasis>
<anchor xml:id="_gps__connector_8cpp_source_1l00080"/>00080 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gnss.getPVT()&#32;&amp;&amp;&#32;gnss.getDOP())&#32;{
<anchor xml:id="_gps__connector_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;time_getpvt.restart();
<anchor xml:id="_gps__connector_8cpp_source_1l00082"/>00082 
<anchor xml:id="_gps__connector_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Satellites&#32;is&#32;a&#32;special&#32;case,&#32;we&#32;want&#32;to&#32;see&#32;it&#32;even&#32;if&#32;no&#32;fix.</emphasis>
<anchor xml:id="_gps__connector_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;data.satellites_valid&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_gps__connector_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;data.satsInView&#32;=&#32;gnss.getSIV();&#32;<emphasis role="comment">//&#32;Satellites&#32;In&#32;View</emphasis>
<anchor xml:id="_gps__connector_8cpp_source_1l00086"/>00086 
<anchor xml:id="_gps__connector_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gnss.getDateValid())&#32;{
<anchor xml:id="_gps__connector_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;data.year&#32;=&#32;gnss.getYear();
<anchor xml:id="_gps__connector_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;data.month&#32;=&#32;gnss.getMonth();
<anchor xml:id="_gps__connector_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;data.day&#32;=&#32;gnss.getDay();
<anchor xml:id="_gps__connector_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;data.date_valid&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_gps__connector_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;date_timer.restart();
<anchor xml:id="_gps__connector_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;}
<anchor xml:id="_gps__connector_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(date_timer.isExpired())&#32;{
<anchor xml:id="_gps__connector_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;data.date_valid&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_gps__connector_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;}
<anchor xml:id="_gps__connector_8cpp_source_1l00097"/>00097 
<anchor xml:id="_gps__connector_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gnss.getTimeValid())&#32;{
<anchor xml:id="_gps__connector_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;data.hour&#32;=&#32;gnss.getHour();
<anchor xml:id="_gps__connector_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;data.minute&#32;=&#32;gnss.getMinute();
<anchor xml:id="_gps__connector_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;data.second&#32;=&#32;gnss.getSecond();
<anchor xml:id="_gps__connector_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;data.time_valid&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_gps__connector_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;time_timer.restart();
<anchor xml:id="_gps__connector_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;}
<anchor xml:id="_gps__connector_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(time_timer.isExpired())&#32;{
<anchor xml:id="_gps__connector_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;data.time_valid&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_gps__connector_8cpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;}
<anchor xml:id="_gps__connector_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gnss.getGnssFixOk())&#32;{
<anchor xml:id="_gps__connector_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;data.hdop&#32;=&#32;gnss.getHorizontalDOP();&#32;<emphasis role="comment">//&#32;Position&#32;Dilution&#32;of&#32;Precision</emphasis>
<anchor xml:id="_gps__connector_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;data.latitude&#32;=&#32;gnss.getLatitude()&#32;*&#32;1e-7;
<anchor xml:id="_gps__connector_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;data.longitude&#32;=&#32;gnss.getLongitude()&#32;*&#32;1e-7;
<anchor xml:id="_gps__connector_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;data.altitudeMSL&#32;=&#32;gnss.getAltitudeMSL()&#32;*&#32;1e-3;&#32;<emphasis role="comment">//&#32;Above&#32;MSL&#32;(not&#32;ellipsoid)</emphasis>
<anchor xml:id="_gps__connector_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;data.location_valid&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_gps__connector_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;location_timer.restart();
<anchor xml:id="_gps__connector_8cpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;}
<anchor xml:id="_gps__connector_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(location_timer.isExpired())&#32;{
<anchor xml:id="_gps__connector_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;data.location_valid&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_gps__connector_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;}
<anchor xml:id="_gps__connector_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;ret_status&#32;=&#32;e_worker_data_read;
<anchor xml:id="_gps__connector_8cpp_source_1l00120"/>00120 &#32;&#32;}
<anchor xml:id="_gps__connector_8cpp_source_1l00121"/>00121 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_gps__connector_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;ret_status&#32;=&#32;e_worker_idle;
<anchor xml:id="_gps__connector_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(time_getpvt.isExpired())&#32;{
<anchor xml:id="_gps__connector_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;data.satellites_valid&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_gps__connector_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;data.location_valid&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_gps__connector_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;data.date_valid&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_gps__connector_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;data.time_valid&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_gps__connector_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;}
<anchor xml:id="_gps__connector_8cpp_source_1l00129"/>00129 &#32;&#32;}
<anchor xml:id="_gps__connector_8cpp_source_1l00130"/>00130 
<anchor xml:id="_gps__connector_8cpp_source_1l00131"/>00131 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret_status;
<anchor xml:id="_gps__connector_8cpp_source_1l00132"/>00132 }
</programlisting></section>
